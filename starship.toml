add_newline = true

format = """
$python\
$nodejs\
$rust\
$lua\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$hg_branch\
$line_break\
$username\
$hostname\
$shlvl\
$directory\
$line_break\
$status\
$cmd_duration\
$character"""

# Timeout for commands executed by starship (in milliseconds)
command_timeout=2000

[line_break]
disabled = false

[character]
format = "$symbol"
success_symbol = "[ ](yellow)"
error_symbol = "[ ](bright-red)"
vicmd_symbol = "[ ](blue)"
vimcmd_replace_one_symbol = "[󰄾 ](blue)"
vimcmd_replace_symbol = "[󰄾 ](red)"
vimcmd_visual_symbol = "[ ](bright-black)"

[status]
disabled = false
pipestatus = true
format = '([\[](black)[$symbol$int]($style)[\]](black) )'
symbol = '✘'
not_executable_symbol = ' '
not_found_symbol = ' '
sigint_symbol = '󰭿 '
signal_symbol = ' '
map_symbol = true
style = 'bold bright-red'
pipestatus_format = '[\[$pipestatus\]](black)'
pipestatus_separator = ' ⁞'
pipestatus_segment_format = '[$symbol $int]($style)'

[cmd_duration]
format = '([$duration]($style) )'

[directory]
read_only = "󰌾"
truncation_length = 8
fish_style_pwd_dir_length = 8
truncate_to_repo = false
style = 'black'
format = "([$read_only]($read_only_style) )[ ](black)[$path]($style) "
repo_root_style = 'bold cyan'
repo_root_format = "([$read_only]($read_only_style) )[ ](black)[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style) "

[directory.substitutions]
"~/Code/" = ""
"~/" = ""

[git_branch]
symbol = " "
format = '[$symbol$branch]($style)'
style = 'bright-black'

[hg_branch]
symbol = " "
format = '[$symbol($version)]($style)'
style = 'bright-black'

[git_status]
style = 'black'
format = '( [([$modified$renamed$deleted](purple))$staged$untracked$conflicted( \[$ahead_behind\])( \[$stashed\])]($style)) '
modified = '[󰛄](purple)'
untracked = '[](yellow)'
staged = '[](blue)'
renamed = '[»](green)'
deleted = '[](red)'
conflicted = '[](red) \[[${count} conflicted](red)\]'
ahead = 'ahead [${count}](green)'
diverged = 'ahead [${ahead_count}](green), behind [${behind_count}](red)'
behind = 'behind [${count}](red)'
stashed = "[${count}](green) stashed"

[nodejs]
format = '([$symbol$version]($style) )'
symbol = "󰎙 "
style =  "green"

[python]
format = '([$symbol$version]($style) )'
symbol = " "
style = "yellow"

[rust]
format = '([$symbol$version]($style) )'
symbol = " "
style = "red"

[lua]
format = '([$symbol$version]($style) )'
symbol = "󰢱 "
style = "blue"
lua_binary = "luajit"
