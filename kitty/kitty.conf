# vim:fileencoding=utf-8:ft=kitty.conf:foldmethod=marker

# Theme
# -----
include laserwave.conf

# Font Settings
# -------------
# See `kitty list-fonts --psnames`
font_family MonoLisa Variable
font_size 14.0

# General Settings
# ----------------
# Hide the mouse cursor immediately when typing text.
mouse_hide_wait -1.0
copy_on_select yes
enable_audio_bell no
editor nvim
# Use the shell's title
shell_integration no-title

# MacOS Settings
# --------------
# Allow <A-*> bindings in neovim
macos_option_as_alt yes
# Use macos displayp3 colorspace
macos_colorspace displayp3
# Give the text a bit more thickness
macos_thicken_font 0.5

# Tab bar layout
# --------------
tab_bar_edge                    top
tab_bar_margin_width            0.0
tab_bar_margin_height           2.0 0.0
tab_bar_style                   separator
tab_separator                   "  "
tab_bar_align                   left
tab_bar_min_tabs                1
tab_switch_strategy             left
tab_title_template              " {fmt.fg.tab}  {title} "
tab_activity_symbol             ""
active_tab_title_template       " {fmt.fg.magenta}  {fmt.fg.tab}{title} "
active_tab_font_style           bold
inactive_tab_font_style         italic

# Window layout
# -------------
# fat -- One (or optionally more) windows are shown full width on the top, the rest of the windows are shown side-by-side on the bottom
# grid -- All windows are shown in a grid
# horizontal -- All windows are shown side-by-side
# splits -- Windows arranged in arbitrary patterns created using horizontal and vertical splits
# stack -- Only a single maximized window is shown at a time
# tall -- One (or optionally more) windows are shown full height on the left, the rest of the windows are shown one below the other on the right
# vertical -- All windows are shown one below the other
enabled_layouts fat:bias=62,tall:bias=62,grid,stack

# Keybindings
# -----------
clear_all_shortcuts yes

map cmd+q quit

# Clipboard
map cmd+c copy_to_clipboard
map cmd+v paste_from_clipboard

# Scrolling
map opt+cmd+page_up scroll_line_up
map cmd+up scroll_line_up
map opt+cmd+page_down scroll_line_down
map cmd+down scroll_line_down
map cmd+page_up scroll_page_up
map cmd+page_down scroll_page_down
map cmd+home scroll_home
map cmd+end scroll_end

# Window
# Basic toggle-term-like behavior but with a kitty window instead.
map cmd+t kitten toggle_term.py cwd
map cmd+n kitten toggle_term.py new cwd
map shift+cmd+d close_window
map cmd+r start_resizing_window
map cmd+m swap_with_window
map shift+cmd+m detach_window ask

# This makes it so window management shortcuts work seamlessly between kitty windows and vim splits.
# TODO: Disable when stack layout is active.
map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j "(?:fzf)|(?:n?vim)"
map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k "(?:fzf)|(?:n?vim)"
map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h "(?:fzf)|(?:n?vim)"
map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l "(?:fzf)|(?:n?vim)"

# Layout management
map cmd+l next_layout

# Tab
map shift+cmd+t new_tab
map cmd+w close_tab
map shift+cmd+l next_tab
map cmd+] next_tab
map shift+cmd+h previous_tab
map cmd+[ previous_tab

# OS Window
map shift+cmd+n new_os_window
map shift+cmd+w close_os_window

# Font size
map cmd+plus change_font_size all +2.0
map cmd+equal change_font_size all +2.0
map shift+cmd+equal change_font_size all +2.0
map cmd+minus change_font_size all -2.0
map shift+cmd+minus change_font_size all -2.0
map cmd+0 change_font_size all 0

# Config editing
map cmd+, edit_config_file
map ctrl+cmd+, load_config_file
map opt+cmd+, debug_config

# Shell integration
map cmd+shift+g show_last_command_output
map cmd+shift+z scroll_to_prompt -1
map cmd+shift+x scroll_to_prompt 1
map cmd+shift+s show_scrollback

# Open the output of the last command in a pager such as less (ctrl+shift+g)
# Jump to the previous/next prompt in the scrollback (ctrl+shift+z / ctrl+shift+x)
# Click with the mouse anywhere in the current command to move the cursor there
# Hold Ctrl+Shift and right-click on any command output in the scrollback to view it in a pager

scrollback_pager nvim -u ~/.config/nvim/pager.lua -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "

# Misc.
# map ctrl+cmd+space kitten unicode_input
# map opt+cmd+s toggle_macos_secure_keyboard_entry
map ctrl+cmd+f toggle_fullscreen
# map shift+cmd+/ open_url https://sw.kovidgoyal.net/kitty/

# map cmd+k clear_terminal to_cursor active
map cmd+k clear_terminal scroll active
map opt+cmd+r clear_terminal reset active

# Sends vim-compatible keycodes for bindings
map shift+enter send_text all \x1b[13;2u
map ctrl+enter send_text all \x1b[13;5u
map ctrl+space send_text all \x1b[32;5u
