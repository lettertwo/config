os:
  editPreset: nvim
gui:
  nerdFontsVersion: "3"
  authorColors:
    "*": cyan
    "Eric Eldredge": blue
  branchColors:
    "lettertwo": blue
  scrollHeight: 2
  scrollPastBottom: true
  mouseEvents: true
  skipDiscardChangeWarning: false
  skipStashWarning: false
  sidePanelWidth: 0.3333
  expandFocusedSidePanel: true
  expandedSidePanelWeight: 2
  mainPanelSplitMode: flexible
  enlargedSideViewLocation: left
  language: auto
  timeFormat: 02 Jan 06
  shortTimeFormat: 3:04PM
  theme:
    activeBorderColor:
      - green
      - bold
    inactiveBorderColor:
      - black
    searchingActiveBorderColor:
      - cyan
      - bold
    optionsTextColor:
      - blue
    selectedLineBgColor:
      - "#433351"
    cherryPickedCommitBgColor:
      - cyan
    cherryPickedCommitFgColor:
      - blue
    markedBaseCommitBgColor:
      - yellow
    markedBaseCommitFgColor:
      - blue
    unstagedChangesColor:
      - black
    defaultFgColor:
      - default
  commitLength:
    show: true
  skipNoStagedFilesWarning: false
  showListFooter: true
  showFileTree: false
  showRandomTip: true
  showCommandLog: false
  showBottomLine: false
  showBranchCommitHash: false
  commandLogSize: 8
  splitDiff: auto
  skipRewordInEditorWarning: false
  border: rounded
  animateExplosion: true
git:
  paging:
    colorArg: always
    pager: delta --dark --paging=never
  commit:
    signOff: false
  merging:
    manualCommit: false
    args: ""
  mainBranches:
    - master
    - main
  skipHookPrefix: WIP
  autoFetch: true
  autoRefresh: true
  fetchAll: true
  branchLogCmd: "git log --graph --color=always --oneline --pretty=format:'%C(bold red)%h%Creset %s %C(bold blue)%an%Creset %C(yellow)(%cr)%Creset%C(bold magenta)%d%Creset' {{branchName}} --"
  allBranchesLogCmd: git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium
  overrideGpg: false
  disableForcePushing: false
  commitPrefixes: {}
  parseEmoji: true
  log:
    order: default
    showGraph: always
    showWholeGraph: false
update:
  method: prompt
  days: 14
refresher:
  refreshInterval: 10
  fetchInterval: 60
confirmOnQuit: false
quitOnTopLevelReturn: false
keybinding:
  universal:
    quit: q
    quit-alt1: <c-c>
    return: <esc>
    quitWithoutChangingDirectory: Q
    togglePanel: <tab>
    prevItem: k
    nextItem: j
    prevItem-alt: ""
    nextItem-alt: ""
    prevPage: ","
    nextPage: .
    scrollLeft: H
    scrollRight: L
    gotoTop: g
    gotoBottom: "G"
    prevBlock: <disabled>
    nextBlock: <disabled>
    prevBlock-alt: <up>
    nextBlock-alt: <down>
    nextBlock-alt2: ""
    prevBlock-alt2: ""
    jumpToBlock:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
    nextMatch: "n"
    prevMatch: "N"
    startSearch: /
    optionMenu: ""
    optionMenu-alt1: "?"
    select: <space>
    goInto: <enter>
    confirm: <enter>
    confirmInEditor: <a-enter>
    remove: d
    new: "n"
    edit: e
    openFile: o
    scrollUpMain: <pgup>
    scrollDownMain: <pgdown>
    scrollUpMain-alt1: K
    scrollDownMain-alt1: J
    scrollUpMain-alt2: <c-u>
    scrollDownMain-alt2: <c-d>
    toggleRangeSelect: V
    rangeSelectDown: <s-down>
    rangeSelectUp: <s-up>
    executeShellCommand: ":"
    createRebaseOptionsMenu: m
    pushFiles: P
    pullFiles: p
    refresh: R
    createPatchOptionsMenu: <c-p>
    nextTab: "<right>"
    prevTab: "<left>"
    nextScreenMode: +
    prevScreenMode: _
    undo: u
    redo: <c-r>
    filteringMenu: <c-s>
    diffingMenu: W
    diffingMenu-alt: <c-e>
    copyToClipboard: y
    openRecentRepos: <disabled>
    submitEditorText: <enter>
    extrasMenu: "@"
    toggleWhitespaceInDiffView: <c-w>
    increaseContextInDiffView: "}"
    decreaseContextInDiffView: "{"
  status:
    checkForUpdate: u
    recentRepos: <enter>
    allBranchesLogGraph: a
  files:
    commitChanges: c
    commitChangesWithoutHook: w
    amendLastCommit: <disabled>
    commitChangesWithEditor: C
    confirmDiscard: x
    ignoreFile: i
    refreshFiles: r
    stashAllChanges: s
    viewStashOptions: S
    toggleStagedAll: a
    viewResetOptions: D
    fetch: f
    toggleTreeView: "`"
    openMergeTool: M
    openStatusFilter: <c-b>
  branches:
    createPullRequest: o
    viewPullRequestOptions: O
    copyPullRequestURL: <c-y>
    checkoutBranchByName: c
    forceCheckoutBranch: F
    rebaseBranch: r
    renameBranch: R
    mergeIntoCurrentBranch: M
    viewGitFlowOptions: i
    fastForward: f
    createTag: T
    pushTag: P
    setUpstream: u
    fetchRemote: f
  worktrees:
    viewWorktreeOptions: w
  commits:
    squashDown: s
    renameCommit: r
    renameCommitWithEditor: R
    viewResetOptions: D
    markCommitAsFixup: f
    createFixupCommit: F
    squashAboveCommits: S
    moveDownCommit: J
    moveUpCommit: K
    amendToCommit: A
    resetCommitAuthor: a
    pickCommit: p
    revertCommit: t
    cherryPickCopy: c
    pasteCommits: v
    markCommitAsBaseForRebase: B
    tagCommit: T
    checkoutCommit: <space>
    resetCherryPick: <c-R>
    copyCommitAttributeToClipboard: "y"
    openLogMenu: l
    openInBrowser: o
    viewBisectOptions: b
  stash:
    popStash: g
    renameStash: r
  commitFiles:
    checkoutCommitFile: c
  main:
    toggleSelectHunk: a
    pickBothHunks: b
    editSelectHunk: E
  submodules:
    init: i
    update: u
    bulkMenu: b
  commitMessage:
    commitMenu: <c-o>
disableStartupPopups: false
notARepository: prompt
promptToReturnFromSubprocess: true
customCommands:
  - key: "A"
    command: git diff --cached --quiet HEAD && { echo "No staged changes to amend."; exit 1; } || git commit --amend --no-edit --no-verify
    context: "files"
    description: "Amend last commit (--no-verify)"
    loadingText: Amending previous commit…
  - key: "C"
    prompts:
      - type: "input"
        title: "commit --no-verify"
        initialValue: ""
    command: git commit -m "{{index .PromptResponses 0}}" --no-verify
    description: "commit --no-verify"
    loadingText: "Committing (--no-verify)…"
    context: "global"
  - key: "c"
    context: "worktrees"
    command: "copyuntracked {{.Form.FromWorktree}} {{.SelectedWorktree.Path }}"
    description: "Copy untracked files from another worktree"
    showOutput: true
    prompts:
      - type: "menuFromCommand"
        title: "Which worktree to copy from?"
        key: "FromWorktree"
        # TODO: Figure out how to work around the fact that this command fails
        # command: "git worktree list | grep -v {{ .SelectedWorktree.Path }}"
        command: "git worktree list"
        filter: '(?P<path>.*)\s+(?P<hash>.*)\s+\[(?P<name>.*)\]'
        valueFormat: "{{ .path }}"
        labelFormat: "{{ .name }}"
  - key: "t"
    context: "localBranches"
    command: "gt ls"
    description: "Show stack"
    showOutput: true
