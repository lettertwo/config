# core config
[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	whitespace = space-before-tab,trailing-space
	pager = less -F -X
[branch]
	autosetupmerge = true
[pull]
	ff = only
	rebase = true
[push]
	default = tracking
[rerere]
	enabled = false
[help]
	autocorrect = 1
[difftool]
	prompt = false
[mergetool]
	prompt = false
[merge]
	log = true
[rebase]
	autoStash = true
[diff]
	compactionHeuristic = true

# aliases
[alias]

	# extensions

	remotes = remote -v
	merged = branch -a --merged
	unmerged = branch -a --no-merged
	delete-merged = !git branch --merged | grep -v "\\*" | xargs -n 1 git branch -d
	who = shortlog -s --
	track = checkout -t
	upstream = "!f() { git rev-parse --verify -q --symbolic-full-name --abbrev-ref $1@{u}; }; f"
	diffstat = diff --stat -r
	# TODO: how to get cwd url (instead of repo root url)
	svnurl = !git svn info | grep URL | sed 's/URL: \\(.*\\)/\\1/'
	svnroot = !git svn info | grep Root | sed 's/Repository Root: \\(.*\\)/\\1/'
	whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
	add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
	incoming = !git l ..@{u}
	outgoing = !git l @{u}..
	stash-unstaged = stash -k
	logme = !git log-pretty --graph --date=short --author="\"`git config --get user.name`\""
	log-pretty = log --pretty=format:'%C(red)%h%C(reset) %C(bold white)%ad%C(reset)%C(green)%d%C(reset) %C(white)%s%C(reset) %C(bold blue)%aN%C(reset)'
	# TODO: Find the git root and search from there.
	cleanup = !sh -c 'find . -name *.orig -delete'
	amend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend
	staged = diff --staged --name-status
	unstaged = diff --name-status
	update = pull --rebase
	fast-forward = pull --ff-only
	start = !git init && git commit --allow-empty -m 'Initial commit'
	mkorphan = "!f() { if [ -z "$1" ] ; then echo 'Missing name for orphan branch. Usage: git mkorphan <branchname>'; exit 1; fi; git checkout --orphan $1 && git rm -rf . && git commit --allow-empty -m 'Initial commit'; }; f"
	# Pull in remote changes for the current repository and all its submodules
	pull-all = !"git pull; git submodule foreach git pull origin master"
	# Clone a repository including all submodules
	clone-all = clone --recursive
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	# List ignored files
	ignored = !git status --porcelain --short --ignored | sed -n "\"s/^!! //p\""
	# List conflicted files
	conflicted = !git status | sed -n "\"s/^.*both [a-z]*ed: *//p\""
	# Record removal of missing files to the index.
	index-removed = !git ls-files -z --deleted | xargs -0 git rm
	# Show dropped stashes
	stash-dropped = !"git fsck --unreachable 2> /dev/null | grep 'commit' | awk '{print $3}' | git log-pretty --extended-regexp --grep=\"${1:-(WIP )?[Oo]n [^:]+:}\" --merges --no-walk --stdin"
	# Recover a dropped stash
	stash-recover = !"f() { if [ -z "$1" ] ; then echo 'Missing commit hash.'; exit 1; fi; git update-ref -m \"$(git log -1 --pretty="format:%s" "$1")\" refs/stash "$1"; }; f"

	# Shows changes made by a branch since the last common commit with another branch.
	# Usage:
	#   `git changes`
	#      compares the current branch to master
	#   `git changes <branch_name>`
	#      compares the current branch to branch_name
	#   `git changes <branch_name> <branch_name>`
	#      compares the first branch name to the second branch name
	# TODO: Allow arguments to log to be passed through
	changes = "!f() { git l `git merge-base ${1:-master} ${2:-@\\{u\\}}`..${2:-@\\{u\\}} ; }; f"
	show-changes = "!f() { git log -p `git merge-base ${1:-master} ${2:-@\\{u\\}}`..${2:-@\\{u\\}} ; }; f"

	# Shows the commits that are unique to the current branch (not in any other branches.)
	unique = "!f() { local branch=${1:-$(git symbolic-ref --short HEAD)} ; git l --no-merges $branch --not $(git for-each-ref --format='%(refname)' refs/heads | grep -Fv refs/heads/$branch) ; }; f"

	# shortcuts
	i = add
	ip = add -p
	ir = !git index-removed
	d = diff
	wd = !git d --no-ext-diff
	id = !git wd --cached
	p = push
	c = commit -v
	ci = !git commit
	cm = !git c -m
	ca = !git amend
	ce = !git ci --amend
	co = checkout
	br = branch
	bra = branch -a
	brr = branch -r
	s = status -sb
	# FIXME: !git changes the wd to the git root!
	st = !git s
	sts = !git s --untracked-files=no
	sta = !git s --untracked-files=all
	stc = !git conflicted
	l = !git log-pretty --graph --date=short
	lr = !git l --date=relative
	lme = !git logme
	ff = !git fast-forward
	up = !git update
	in = !git incoming
	out = !git outgoing
	ls = ls-files
	li = !git ignored
	r = reset
	rs = !git r --soft
	rh = !git r --hard
	ri = !git rebase -i
	rc = !git rebase --continue
	ra = !git rebase --abort

# color config
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	pager = true
	ui = auto
[color "diff"]
	meta = black bold
	frag = magenta
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	untracked = yellow
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
